openapi: 3.0.3
info:
  title: "common"
  version: "1.0"
paths: {}
components:
  schemas:
    pageIndex:
      title: ページ数
      type: integer
      minimum: 1
      default: 1
      example: 1
    pageSize:
      title: 表示数
      type: integer
      example: "10"
      minimum: 1
      default: 10
      description: 表示数
    totalPages:
      title: 全ページ数
      type: integer
      example: 10
      minimum: 0
    totalCount:
      title: 全件数
      type: integer
      minimum: 0
      example: 100
    hasNext:
      title: 次のページがあるかどうか
      type: boolean
    hasPrevious:
      title: 前のページがあるかどうか
      type: boolean
      default: false

    error:
      title: エラー
      type: object
      properties:
        message:
          title: メッセージ
          type: string
          example: "桁数違反"
        code:
          title: エラーコード
          type: string
          example: null
      required:
        - message

    baseResponse:
      title: レスポンス
      type: object
      properties:
        data:
          title: データ
          type: object
          readOnly: true
        errors:
          type: array
          items:
            $ref: "#/components/schemas/error"
          example: []

    pageResponse:
      title: ページレスポンス
      allOf:
        - $ref: "#/components/schemas/baseResponse"
        - type: object
          description: ページネーションデータ
          properties:
            pageIndex:
              $ref: "#/components/schemas/pageIndex"
            pageSize:
              $ref: "#/components/schemas/pageSize"
            totalPages:
              $ref: "#/components/schemas/totalPages"
            totalCount:
              $ref: "#/components/schemas/totalCount"
            hasNext:
              $ref: "#/components/schemas/hasNext"
            hasPrevious:
              $ref: "#/components/schemas/hasPrevious"
          required:
            - pageIndex
            - pageSize
            - totalPages
            - totalCount
            - hasNext
            - hasPrevious

  parameters:
    pageIndex:
      name: pageIndex
      in: query
      schema:
        $ref: "#/components/schemas/pageIndex"
      allowEmptyValue: true

    pageSize:
      name: pageSize
      in: query
      schema:
        $ref: "#/components/schemas/pageSize"
      description: 表示数
      allowEmptyValue: true

    sortColumn:
      name: sortColumn
      in: query
      required: false
      schema:
        type: string
        example: ComponentName
      description: ソートするカラム名

    sortOrder:
      name: sortOrder
      in: query
      schema:
        type: string
        enum:
          - ASC
          - DESC
        example: ASC
      description: ソート順(ASC、DESC)

    filterColumn:
      name: filterColumn
      in: query
      required: false
      schema:
        type: string
      description: フィルター項目

    filterQuery:
      name: filterQuery
      in: query
      required: false
      schema:
        type: string
      description: フィルター内容

    searchQuery:
      name: searchQuery
      description: |
        検索クエリ文字列

        電子部品名（name）とモデル名（modelName）を対象とした部分一致検索を行います。
        - 大文字小文字を区別しません
        - 複数の単語をスペース区切りで指定するとOR検索になります
        - 例: "PIC 16F" → 「PIC」と「16F」のどちらかを含む部品を検索
      in: query
      required: false
      schema:
        type: string
        minLength: 1
        maxLength: 100
        example: "PIC 16F"
      allowEmptyValue: false
